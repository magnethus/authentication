{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c7407fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__DFzSv\",\"control\":\"ProfileForm_control__2wTdN\",\"action\":\"ProfileForm_action__2zdBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2u2ay\",\"logo\":\"MainNavigation_logo__26NOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__x45Y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1uS2V\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 6000) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    }\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) { \r\n    initialToken = tokenData.token;\r\n  } \r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    if (logoutTimer) {\r\n        clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  \r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n        console.log(tokenData.duration);\r\n        logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData,logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    // optional: redirect the user\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    //addValidation\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBjSQ9hYxKqLvXLDmz80AwNkk7WrC-t494', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      // assumption: Always succeeds!\n        history.replace('/');\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength='7' ref={newPasswordInputRef}/>\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBjSQ9hYxKqLvXLDmz80AwNkk7WrC-t494\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBjSQ9hYxKqLvXLDmz80AwNkk7WrC-t494\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //     errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request ...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && <Route path=\"/auth\">\n          <AuthPage />\n        </Route>}\n        {authCtx.isLoggedIn && (\n          <Route path=\"/profile\">\n            <UserProfile />\n          </Route>\n        )}\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1-NOS\",\"control\":\"AuthForm_control__1jdSN\",\"actions\":\"AuthForm_actions__2qace\",\"toggle\":\"AuthForm_toggle__2PlhJ\"};"],"sourceRoot":""}